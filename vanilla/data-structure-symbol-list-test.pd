#N struct test float x symbol list;
#N canvas 144 126 547 300 10;
#N canvas 0 22 450 300 data 0;
#X scalar test 1 view1\ view2\ view3 \;;
#X restore 19 90 pd data;
#N canvas 415 23 246 92 test 0;
#X obj 9 12 struct test float x symbol list;
#X text 6 38 There is a symbol field named list;
#X restore 19 118 pd test;
#N canvas 389 105 566 521 init 1;
#X obj 62 143 pointer;
#X obj 63 229 append test x;
#X obj 63 196 f 1;
#X obj 63 169 t b p;
#X obj 82 341 set -symbol test list;
#X obj 63 257 t p b p;
#X obj 63 370 get test list;
#X obj 63 428 print list;
#X obj 62 31 inlet;
#X obj 62 62 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 119 74 \; pd-data clear;
#X obj 62 86 t b b;
#X msg 62 114 traverse pd-data \, bang;
#X msg 82 292 view1 view2 view3;
#X text 135 400 <-- convert a symbol to a list;
#X text 140 317 <--- convert a list to a symbol;
#X obj 82 317 cyclone/tosymbol;
#X obj 63 399 cyclone/fromsymbol;
#X obj 366 284 objectinfo;
#X obj 363 316 print;
#X msg 369 236 template;
#X connect 0 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 3 1 1 1;
#X connect 5 0 6 0;
#X connect 5 1 13 0;
#X connect 5 2 4 1;
#X connect 5 2 18 1;
#X connect 6 0 17 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 12 0;
#X connect 11 1 10 0;
#X connect 12 0 0 0;
#X connect 13 0 16 0;
#X connect 16 0 4 0;
#X connect 17 0 7 0;
#X connect 18 0 19 0;
#X connect 20 0 18 0;
#X restore 19 145 pd init;
#X text 17 9 This is possible to simulate a list field inside a struct
;
#X text 71 145 <--- open this subpatch;
