#N struct template_songs array songs template_song;
#N struct template_song symbol song_name array seq_slots template_seq_slot
array midi_cc_automations template_midi_cc_automation;
#N struct template_seq_slot float length float is_muted float midi_track_index
array seq template_seq;
#N struct template_seq float length array note_slots template_midi_note_slot
array midi_cc_automations template_midi_cc_automation;
#N struct template_midi_note_slot array midi_notes template_midi_note
array midi_cc_automations template_midi_cc_automation;
#N struct template_midi_note float pitch float velocity float length
;
#N struct template_midi_cc_automation float midi_cc_number float midi_chan
float midi_port array midi_automations_values template_midi_cc_automation_value
;
#N struct template_midi_cc_automation_value float value float delay_ms
;
#N struct template_midi_track symbol name float midi_chan float midi_port
float is_muted;
#N struct template_global float tempo array midi_tracks template_midi_track
;
#N struct template1 float x float y float z float q;
#N canvas 710 132 827 661 10;
#N canvas 1392 325 450 323 template_songs 0;
#X obj 59 114 struct template_songs array songs template_song;
#X restore 30 136 pd template_songs;
#N canvas 1353 582 380 251 template_song 0;
#X obj 50 57 struct template_song symbol song_name array seq_slots
template_seq_slot array midi_cc_automations template_midi_cc_automation
;
#X restore 55 180 pd template_song;
#N canvas 940 460 713 323 template_seq_slot 0;
#X obj 31 47 struct template_seq_slot float length float is_muted float
midi_track_index array seq template_seq, f 96;
#X restore 79 229 pd template_seq_slot;
#N canvas 1273 302 450 323 template_midi_cc_automation 1;
#X obj 66 68 struct template_midi_cc_automation float midi_cc_number
float midi_chan float midi_port array midi_automations_values template_midi_cc_automation_value
;
#X restore 70 401 pd template_midi_cc_automation;
#N canvas 1248 518 450 323 template_midi_cc_automation_value 0;
#X obj 72 68 struct template_midi_cc_automation_value float value float
delay_ms;
#X restore 69 441 pd template_midi_cc_automation_value;
#N canvas 1273 302 450 323 template_midi_note 0;
#X obj 19 66 struct template_midi_note float pitch float velocity float
length;
#X restore 154 358 pd template_midi_note;
#N canvas 1190 492 450 346 template_midi_note_slot 0;
#X obj 25 52 struct template_midi_note_slot array midi_notes template_midi_note
array midi_cc_automations template_midi_cc_automation;
#X restore 133 319 pd template_midi_note_slot;
#N canvas 1400 412 450 346 template_seq 0;
#X obj 48 61 struct template_seq float length array note_slots template_midi_note_slot
array midi_cc_automations template_midi_cc_automation;
#X restore 110 276 pd template_seq;
#N canvas 719 335 450 300 template_midi_track 0;
#X obj 25 74 struct template_midi_track symbol name float midi_chan
float midi_port float is_muted;
#X restore 30 94 pd template_midi_track;
#N canvas 719 335 450 300 template_global 0;
#X obj 81 81 struct template_global float tempo array midi_tracks template_midi_track
;
#X restore 26 61 pd template_global;
#N canvas 719 335 450 300 data 0;
#X scalar template1 50 100 30 9 \;;
#X scalar template1 150 100 -20 900 \;;
#X restore 27 32 pd data;
#N canvas 719 335 450 300 init 0;
#X obj 231 159 pointer;
#X obj 24 161 append template1 x y z q;
#X msg 231 101 \; pd-data clear;
#X msg 231 137 traverse pd-data \, bang;
#X obj 121 102 t b b b;
#X msg 121 61 bang;
#X obj 121 30 loadbang;
#X text 155 61 click here to re-initialize;
#X text 21 191 This subpatch sets up the "data" window with two objects.
How this works will get explained later.;
#X msg 24 138 50 100 30 9 \, 150 100 -20 900;
#X connect 0 0 1 4;
#X connect 3 0 0 0;
#X connect 4 0 9 0;
#X connect 4 1 3 0;
#X connect 4 2 2 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 9 0 1 0;
#X restore 65 531 pd init;
#N canvas 719 335 495 363 template1 0;
#X obj 116 81 filledpolygon 244 q 5 0 0 20 z 40 0;
#X obj 116 56 struct template1 float x float y float z float q;
#X text 113 106 This subpatch acts as a template which describes the
data structure. The [struct] associates a name with this template ("template1")
and specifies four floating point values named x \, y \, z \, and q.
The [filledpolygon] is a drawing instruction. Templates should have
only one [struct] object but may have any number of drawing instructions.
;
#X text 113 192 The arguments to [filledpolygon] are interior color
\, border color \, border width \, and then the points of the polygon.
Arguments which are symbols ("q" and "z" in this case) mean to take
the values from the data structure. Other values are constant. The
position of the object is automatically controlled by fields named
"x" and "y".;
#X restore 66 491 pd template1;
